.x86-btn {
  // Simple button styles using theme CSS custom properties
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  background: none;
  padding: 0;
  cursor: pointer;
  border-radius: var(--radius-md, 0.375rem);
  font-weight: 500;
  transition: all var(--transition-base, 200ms ease);
  text-decoration: none;
  user-select: none;
  
  &:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
  
  // Size variants - use theme variables
  &--sm {
    padding: var(--space-2, 0.5rem) var(--space-3, 0.75rem);
    font-size: var(--text-sm, 0.875rem);
  }
  
  &--lg {
    padding: var(--space-4, 1rem) var(--space-6, 1.5rem);
    font-size: var(--text-lg, 1.125rem);
    min-height: 3rem;
  }
  
  // Variant styles using modular color tokens
  &--primary {
    background: linear-gradient(135deg, var(--ui-primary), hsl(260, 70%, 40%));
    color: white;
    box-shadow: var(--ui-shadow-md);
    
    &:hover:not(:disabled) {
      background: linear-gradient(135deg, hsl(260, 70%, 40%), hsl(260, 70%, 30%));
      transform: translateY(-1px);
      box-shadow: var(--shadow-lg, 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1));
    }
  }
  
  &--secondary {
    background: var(--ui-bg-primary);
    color: var(--ui-text-primary);
    border: 1px solid var(--ui-border);
    
    &:hover:not(:disabled) {
      background: var(--ui-bg-secondary);
      border-color: var(--primary);
    }
  }
  
  &--outline {
    background: transparent;
    color: var(--primary);
    border: 2px solid var(--primary);
    
    &:hover:not(:disabled) {
      background: var(--primary);
      color: white;
    }
  }
  
  &--ghost {
    background: transparent;
    color: var(--primary);
    
    &:hover:not(:disabled) {
      background: var(--primary-alpha-10);
    }
  }
  
  &--danger {
    background: var(--error);
    color: white;
    
    &:hover:not(:disabled) {
      background: var(--error-dark);
      transform: translateY(-1px);
    }
  }
  
  // State styles
  &--disabled,
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none !important;
  }
  
  &--loading {
    cursor: default;
  }
  
  &--full-width {
    width: 100%;
  }
  
  // Icon button styles
  &--icon-only {
    aspect-ratio: 1;
    padding: var(--space-3);
    
    &.x86-btn--sm {
      padding: var(--space-2);
    }
    
    &.x86-btn--lg {
      padding: var(--space-4);
    }
  }
  
  // Content, icons and spinner
  &__content {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-2);
    transition: opacity var(--transition-base);
    
    &--hidden {
      opacity: 0;
    }
  }
  
  &__icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-size: 1em;
    line-height: 1;
    
    &--left {
      margin-right: var(--space-1);
    }
    
    &--right {
      margin-left: var(--space-1);
    }
  }
  
  &__spinner {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    
    &-icon {
      width: 1.25rem;
      height: 1.25rem;
      animation: spin 1s linear infinite;
    }
    
    &-path {
      stroke-dasharray: 60;
      stroke-dashoffset: 60;
      animation: dash 2s linear infinite;
    }
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes dash {
  0% {
    stroke-dashoffset: 60;
  }
  50% {
    stroke-dashoffset: 30;
  }
  100% {
    stroke-dashoffset: 60;
  }
}
